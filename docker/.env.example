# Keira3 Docker Environment Configuration
# Copy this file to .env and update the values for your environment

# ================================================
# Database Configuration (REQUIRED)
# ================================================

# MySQL/MariaDB server hostname or IP address
KEIRA_DATABASE_HOST=localhost

# MySQL/MariaDB server port
KEIRA_DATABASE_PORT=3306

# Database username with read/write access to the AzerothCore world database
KEIRA_DATABASE_USER=acore

# Database password
KEIRA_DATABASE_PASSWORD=azerothcore123

# Database name (typically acore_world for AzerothCore)
KEIRA_DATABASE_NAME=acore_world

# ================================================
# API Service Configuration (OPTIONAL)
# ================================================

# Port for the database API service (internal container port)
DB_API_PORT=3001

# Host binding for the API service
DB_API_HOST=0.0.0.0

# Node.js environment mode
NODE_ENV=production

# ================================================
# Connection Pool Settings (OPTIONAL)
# ================================================

# Maximum number of concurrent database connections
DB_CONNECTION_LIMIT=10

# Timeout in milliseconds for acquiring a connection from the pool
DB_ACQUIRE_TIMEOUT=60000

# Connection timeout in milliseconds
DB_CONNECTION_TIMEOUT=60000

# ================================================
# Application Settings (OPTIONAL)
# ================================================

# Port for the web interface (internal container port)
KEIRA_PORT=8080

# Host binding for the web interface
KEIRA_HOST=0.0.0.0

# ================================================
# Logging Configuration (OPTIONAL)
# ================================================

# Log level: error, warn, info, debug
LOG_LEVEL=info

# Enable debug mode (true/false)
DEBUG=false

# ================================================
# Security Settings (OPTIONAL)
# ================================================

# Enable CORS (Cross-Origin Resource Sharing)
CORS_ENABLED=true

# Allowed CORS origins (comma-separated list)
CORS_ORIGINS=*

# Rate limiting: requests per second for API endpoints
RATE_LIMIT_API=10

# Rate limiting: requests per minute for authentication endpoints
RATE_LIMIT_AUTH=5

# ================================================
# SSL/TLS Configuration (OPTIONAL)
# ================================================

# Enable SSL/TLS termination at container level
SSL_ENABLED=false

# Path to SSL certificate file (if SSL_ENABLED=true)
SSL_CERT_PATH=/etc/ssl/certs/keira.crt

# Path to SSL private key file (if SSL_ENABLED=true)
SSL_KEY_PATH=/etc/ssl/private/keira.key

# ================================================
# Performance Tuning (OPTIONAL)
# ================================================

# Enable gzip compression
GZIP_ENABLED=true

# Maximum request body size (for large SQL queries)
MAX_BODY_SIZE=10M

# Worker processes for nginx (auto = number of CPU cores)
NGINX_WORKER_PROCESSES=auto

# Worker connections per process
NGINX_WORKER_CONNECTIONS=1024

# ================================================
# Monitoring and Health Checks (OPTIONAL)
# ================================================

# Health check interval in seconds
HEALTH_CHECK_INTERVAL=30

# Health check timeout in seconds
HEALTH_CHECK_TIMEOUT=10

# Number of failed health checks before marking as unhealthy
HEALTH_CHECK_RETRIES=3

# Enable Prometheus metrics endpoint
METRICS_ENABLED=false

# ================================================
# Development Settings (DEVELOPMENT ONLY)
# ================================================

# Enable hot reload for development
HOT_RELOAD=false

# Enable detailed error reporting
DETAILED_ERRORS=false

# Enable SQL query logging
QUERY_LOGGING=false

# ================================================
# External Services (OPTIONAL)
# ================================================

# Redis URL for session storage (if using Redis)
REDIS_URL=redis://localhost:6379

# Elasticsearch URL for logging (if using Elasticsearch)
ELASTICSEARCH_URL=http://localhost:9200

# ================================================
# Docker Compose Specific Settings
# ================================================

# External port mappings (used by docker-compose.yml)
EXTERNAL_WEB_PORT=8080
EXTERNAL_API_PORT=3001
EXTERNAL_MYSQL_PORT=3306

# Docker network subnet
DOCKER_NETWORK_SUBNET=172.20.0.0/16

# Container restart policy
RESTART_POLICY=unless-stopped

# ================================================
# Volume Mounts (OPTIONAL)
# ================================================

# Host path for MySQL data persistence
MYSQL_DATA_PATH=./mysql-data

# Host path for application logs
LOGS_PATH=./logs

# Host path for SSL certificates
SSL_CERTS_PATH=./ssl-certs

# ================================================
# Backup Configuration (OPTIONAL)
# ================================================

# Enable automatic database backups
BACKUP_ENABLED=false

# Backup interval in hours
BACKUP_INTERVAL=24

# Number of backup files to retain
BACKUP_RETENTION=7

# Backup storage path
BACKUP_PATH=./backups